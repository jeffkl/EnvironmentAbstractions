#nullable enable
static System.SystemEnvironmentProvider.Instance.get -> System.IEnvironmentProvider!
System.IEnvironmentProvider
System.IEnvironmentProvider.CommandLine.get -> string!
System.IEnvironmentProvider.CurrentDirectory.get -> string!
System.IEnvironmentProvider.CurrentDirectory.set -> void
System.IEnvironmentProvider.CurrentManagedThreadId.get -> int
System.IEnvironmentProvider.Exit(int exitCode) -> void
System.IEnvironmentProvider.ExitCode.get -> int
System.IEnvironmentProvider.FailFast(string? message) -> void
System.IEnvironmentProvider.FailFast(string? message, System.Exception? exception) -> void
System.IEnvironmentProvider.GetCommandLineArgs() -> string![]!
System.IEnvironmentProvider.GetFolderPath(System.Environment.SpecialFolder folder) -> string!
System.IEnvironmentProvider.GetFolderPath(System.Environment.SpecialFolder folder, System.Environment.SpecialFolderOption option) -> string!
System.IEnvironmentProvider.GetLogicalDrives() -> string![]!
System.IEnvironmentProvider.HasShutdownStarted.get -> bool
System.IEnvironmentProvider.Is64BitOperatingSystem.get -> bool
System.IEnvironmentProvider.Is64BitProcess.get -> bool
System.IEnvironmentProvider.MachineName.get -> string!
System.IEnvironmentProvider.NewLine.get -> string!
System.IEnvironmentProvider.OSVersion.get -> System.OperatingSystem!
System.IEnvironmentProvider.ProcessId.get -> int
System.IEnvironmentProvider.ProcessorCount.get -> int
System.IEnvironmentProvider.ProcessPath.get -> string?
System.IEnvironmentProvider.StackTrace.get -> string!
System.IEnvironmentProvider.SystemDirectory.get -> string!
System.IEnvironmentProvider.SystemPageSize.get -> int
System.IEnvironmentProvider.TickCount.get -> int
System.IEnvironmentProvider.TickCount64.get -> long
System.IEnvironmentProvider.UserDomainName.get -> string!
System.IEnvironmentProvider.UserInteractive.get -> bool
System.IEnvironmentProvider.UserName.get -> string!
System.IEnvironmentProvider.Version.get -> System.Version!
System.IEnvironmentProvider.WorkingSet.get -> long
System.SystemEnvironmentProvider
System.SystemEnvironmentProvider.CommandLine.get -> string!
System.SystemEnvironmentProvider.CurrentDirectory.get -> string!
System.SystemEnvironmentProvider.CurrentDirectory.set -> void
System.SystemEnvironmentProvider.CurrentManagedThreadId.get -> int
System.SystemEnvironmentProvider.Exit(int exitCode) -> void
System.SystemEnvironmentProvider.ExitCode.get -> int
System.SystemEnvironmentProvider.ExitCode.set -> void
System.SystemEnvironmentProvider.ExpandEnvironmentVariables(string! name) -> string?
System.SystemEnvironmentProvider.FailFast(string? message) -> void
System.SystemEnvironmentProvider.FailFast(string? message, System.Exception? exception) -> void
System.SystemEnvironmentProvider.GetCommandLineArgs() -> string![]!
System.SystemEnvironmentProvider.GetEnvironmentVariable(string! name) -> string?
System.SystemEnvironmentProvider.GetEnvironmentVariable(string! name, System.EnvironmentVariableTarget target) -> string?
System.SystemEnvironmentProvider.GetEnvironmentVariables() -> System.Collections.Generic.IReadOnlyDictionary<string!, string!>!
System.SystemEnvironmentProvider.GetEnvironmentVariables(System.EnvironmentVariableTarget target) -> System.Collections.Generic.IReadOnlyDictionary<string!, string!>!
System.SystemEnvironmentProvider.GetFolderPath(System.Environment.SpecialFolder folder) -> string!
System.SystemEnvironmentProvider.GetFolderPath(System.Environment.SpecialFolder folder, System.Environment.SpecialFolderOption option) -> string!
System.SystemEnvironmentProvider.GetLogicalDrives() -> string![]!
System.SystemEnvironmentProvider.HasShutdownStarted.get -> bool
System.SystemEnvironmentProvider.Is64BitOperatingSystem.get -> bool
System.SystemEnvironmentProvider.Is64BitProcess.get -> bool
System.SystemEnvironmentProvider.MachineName.get -> string!
System.SystemEnvironmentProvider.NewLine.get -> string!
System.SystemEnvironmentProvider.OSVersion.get -> System.OperatingSystem!
System.SystemEnvironmentProvider.ProcessId.get -> int
System.SystemEnvironmentProvider.ProcessorCount.get -> int
System.SystemEnvironmentProvider.ProcessPath.get -> string?
System.SystemEnvironmentProvider.SetEnvironmentVariable(string! name, string? value) -> void
System.SystemEnvironmentProvider.SetEnvironmentVariable(string! name, string? value, System.EnvironmentVariableTarget target) -> void
System.SystemEnvironmentProvider.StackTrace.get -> string!
System.SystemEnvironmentProvider.SystemDirectory.get -> string!
System.SystemEnvironmentProvider.SystemEnvironmentProvider() -> void
System.SystemEnvironmentProvider.SystemPageSize.get -> int
System.SystemEnvironmentProvider.TickCount.get -> int
System.SystemEnvironmentProvider.TickCount64.get -> long
System.SystemEnvironmentProvider.UserDomainName.get -> string!
System.SystemEnvironmentProvider.UserInteractive.get -> bool
System.SystemEnvironmentProvider.UserName.get -> string!
System.SystemEnvironmentProvider.Version.get -> System.Version!
System.SystemEnvironmentProvider.WorkingSet.get -> long
